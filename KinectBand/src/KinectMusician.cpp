/*
 *  KinectMusician.cpp
 *  KinectBand
 *
 *  Created by Paulo Barcelos on 7/10/11.
 *  Copyright 2011 paulobarcelos.com. All rights reserved.
 *
 */

#include "KinectMusician.h"

///////////////////////////////////////////////////////////////////////////////////
// Constructor --------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////
KinectMusician::KinectMusician(){	
	depthGenerator = NULL;
	user = NULL;
	isTracked = false;
}
///////////////////////////////////////////////////////////////////////////////////
// Destructor ---------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////
KinectMusician::~KinectMusician(){	
	if(depthGenerator != NULL) delete depthGenerator;
	if(user != NULL) delete user;
}
///////////////////////////////////////////////////////////////////////////////////
// setup -------------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////
void KinectMusician::setup(ofxDepthGenerator* depthGenerator){	
	this->depthGenerator = depthGenerator;
	
	osc.setup(OSC_HOST, OSC_PORT);
}
///////////////////////////////////////////////////////////////////////////////////
// update -------------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////
void KinectMusician::update(ofxTrackedUser* user){
	if(this->user != user){
		if(user == NULL) stop();
		else start(user);
	}
}
///////////////////////////////////////////////////////////////////////////////////
// stop ----------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////
void KinectMusician::stop(){	
	user = NULL;
	isTracked = false;
}
///////////////////////////////////////////////////////////////////////////////////
// start ----------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////
void KinectMusician::start(ofxTrackedUser* user){	
	this->user = user;
	isTracked = true;
}
///////////////////////////////////////////////////////////////////////////////////
// memberExists -------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////
bool KinectMusician::memberExists(XnPoint3D& memberPoint){	
	if(memberPoint.X < -1500 || memberPoint.X > 1500) return false; 
	if(memberPoint.Y < -1200 || memberPoint.Y > 1200) return false; 
	if(memberPoint.Z < 0 || memberPoint.Z > 3000) return false; 
	return true;
}